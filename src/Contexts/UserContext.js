// // Contexts/UserContext.js
// import React, { createContext, useEffect, useState } from 'react';

// export const UserContext = createContext();

// export const UserProvider = ({ children }) => {
//   const [user, setUser] = useState({
//     userId: null,
//     phoneNumber: '',
//     isActive: false,
//     isExistingUser: false,
//     firstName: '',
//     lastName: '',
//     gender: '',
//   });

//   useEffect(() => {
//     console.log('User context updated:', user);
//   }, [user]);

//   return (
//     <UserContext.Provider value={{ user, setUser }}>
//       {children}
//     </UserContext.Provider>
//   );
// };
// export const useLocation = () => UserContext(LocationContext);


























































// // Contexts/UserContext.js
// import React, { createContext, useState, useEffect } from 'react';

// export const UserContext = createContext();

// export const UserProvider = ({ children }) => {
//   const [user, setUser] = useState({
//     userId: null,
//     phoneNumber: null,
//     firstName: null,
//     lastName: null,
//     gender: null,
//     // isExistingUser: false,
//     // isActive: false,
//   });

//   // Debug log whenever user state changes
//   useEffect(() => {
//     console.log('UserContext - User state updated:', JSON.stringify(user, null, 2));
//   }, [user]);

//   const updateUser = (userData) => {
//     console.log('UserContext - Updating user with:', JSON.stringify(userData, null, 2));
//     setUser(prevUser => ({
//       ...prevUser,
//       ...userData,
//     }));
//   };

//   const clearUser = () => {
//     console.log('UserContext - Clearing user data');
//     setUser({
//       userId: null,
//       phoneNumber: null,
//       firstName: null,
//       lastName: null,
//       gender: null,
//       // isExistingUser: false,
//       // isActive: false,
//     });
//   };

//   const contextValue = {
//     user,
//     setUser: updateUser,
//     clearUser,
//   };

//   return (
//     <UserContext.Provider value={contextValue}>
//       {children}
//     </UserContext.Provider>
//   );
// };





// Contexts/UserContext.js
// import React, { createContext, useState, useEffect } from 'react';

// export const UserContext = createContext();

// export const UserProvider = ({ children }) => {
//   const [user, setUser] = useState({
//     userId: null,
//     phoneNumber: null,
//     firstName: null,
//     lastName: null,
//     gender: null,
//     isExistingUser: false,
//     isActive: false,
//     generatedOTP: null,    // For storing the OTP generated by server
//     otpExpiryTime: null,   // For storing the OTP expiry time
//   });

//   // Debug log whenever user state changes
//   useEffect(() => {
//     console.log('UserContext - User state updated:', JSON.stringify(user, null, 2));
//   }, [user]);

//   const updateUser = (userData) => {
//     console.log('UserContext - Updating user with:', JSON.stringify(userData, null, 2));
//     setUser(prevUser => ({
//       ...prevUser,
//       ...userData,
//     }));
//   };

//   const clearUser = () => {
//     console.log('UserContext - Clearing user data');
//     setUser({
//       userId: null,
//       phoneNumber: null,
//       firstName: null,
//       lastName: null,
//       gender: null,
//       isExistingUser: false,
//       isActive: false,
//       generatedOTP: null,
//       otpExpiryTime: null,
//     });
//   };

//   // Clear OTP data after successful verification or when needed
//   const clearOtpData = () => {
//     console.log('UserContext - Clearing OTP data');
//     setUser(prevUser => ({
//       ...prevUser,
//       generatedOTP: null,
//       otpExpiryTime: null,
//     }));
//   };

//   const contextValue = {
//     user,
//     setUser: updateUser,
//     clearUser,
//     clearOtpData,
//   };

//   return (
//     <UserContext.Provider value={contextValue}>
//       {children}
//     </UserContext.Provider>
//   );
// };









// Contexts/UserContext.js
import React, { createContext, useState, useEffect } from 'react';

export const UserContext = createContext();

export const UserProvider = ({ children }) => {
  const [user, setUser] = useState({
    userId: null,
    phoneNumber: null,
    firstName: null,
    lastName: null,
    gender: null,
    isExistingUser: false,
    isActive: false,
    generatedOTP: null,    // For storing the OTP generated by server
    otpExpiryTime: null,   // For storing the OTP expiry time
  });

  // Debug log whenever user state changes
  useEffect(() => {
    console.log('UserContext - User state updated:', JSON.stringify(user, null, 2));
  }, [user]);

  const updateUser = (userData) => {
    console.log('UserContext - Updating user with:', JSON.stringify(userData, null, 2));
    setUser(prevUser => ({
      ...prevUser,
      ...userData,
    }));
  };

  const clearUser = () => {
    console.log('UserContext - Clearing user data');
    setUser({
      userId: null,
      phoneNumber: null,
      firstName: null,
      lastName: null,
      gender: null,
      isExistingUser: false,
      isActive: false,
      generatedOTP: null,
      otpExpiryTime: null,
    });
  };

  // Clear OTP data after successful verification or when needed
  const clearOtpData = () => {
    console.log('UserContext - Clearing OTP data');
    setUser(prevUser => ({
      ...prevUser,
      generatedOTP: null,
      otpExpiryTime: null,
    }));
  };

  const contextValue = {
    user,
    setUser: updateUser,
    clearUser,
    clearOtpData,
  };

  return (
    <UserContext.Provider value={contextValue}>
      {children}
    </UserContext.Provider>
  );
};